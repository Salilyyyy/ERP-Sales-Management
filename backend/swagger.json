{
  "swagger": "2.0",
  "info": {
    "title": "Express ERP API",
    "description": "API documentation for Express ERP",
    "version": "1.0.0"
  },
  "host": "localhost:10000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "JWT Token must be included with 'Bearer' prefix.\n\nFormat: Bearer your-jwt-token\nExample: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\n\nNote: The 'Bearer ' prefix is mandatory."
    }
  },
  "paths": {
    "/product-categories": {
      "get": {
        "tags": [
          "Product Categories"
        ],
        "summary": "Returns the list of all product categories",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer",
                    "description": "Product category ID"
                  },
                  "name": {
                    "type": "string",
                    "description": "Category name"
                  },
                  "information": {
                    "type": "string",
                    "description": "Additional information"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          }
        }
      },
      "post": {
        "tags": [
          "Product Categories"
        ],
        "summary": "Create a new product category",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Product category object that needs to be added",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Category name"
                },
                "information": {
                  "type": "string",
                  "description": "Additional information"
                }
              },
              "required": [
                "name"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Product category created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "ID": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "information": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          }
        }
      }
    },
    "/product-categories/{id}": {
      "get": {
        "tags": [
          "Product Categories"
        ],
        "summary": "Get product category by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of product category to fetch"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ID": {
                  "type": "integer",
                  "description": "Product category ID"
                },
                "name": {
                  "type": "string",
                  "description": "Category name"
                },
                "information": {
                  "type": "string",
                  "description": "Additional information"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          },
          "404": {
            "description": "Product category not found"
          }
        }
      },
      "put": {
        "tags": [
          "Product Categories"
        ],
        "summary": "Update product category by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of product category to update"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Product category object that needs to be updated",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Category name"
                },
                "information": {
                  "type": "string",
                  "description": "Additional information"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product category updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "ID": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "information": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          },
          "404": {
            "description": "Product category not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Product Categories"
        ],
        "summary": "Delete product category by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of product category to delete"
          }
        ],
        "responses": {
          "204": {
            "description": "Product category deleted successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          },
          "404": {
            "description": "Product category not found"
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Returns the list of all products",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer",
                    "description": "Product ID"
                  },
                  "produceCategoriesID": {
                    "type": "integer",
                    "description": "Product category ID"
                  },
                  "unit": {
                    "type": "string",
                    "description": "Unit of measurement"
                  },
                  "image": {
                    "type": "string",
                    "description": "Product image URL"
                  },
                  "name": {
                    "type": "string",
                    "description": "Product name"
                  },
                  "weight": {
                    "type": "number",
                    "format": "float",
                    "description": "Product weight"
                  },
                  "length": {
                    "type": "number",
                    "format": "float",
                    "description": "Product length"
                  },
                  "width": {
                    "type": "number",
                    "format": "float",
                    "description": "Product width"
                  },
                  "height": {
                    "type": "number",
                    "format": "float",
                    "description": "Product height"
                  },
                  "supplierID": {
                    "type": "integer",
                    "description": "Supplier ID"
                  },
                  "origin": {
                    "type": "string",
                    "description": "Product origin"
                  },
                  "inPrice": {
                    "type": "number",
                    "format": "float",
                    "description": "Purchase price"
                  },
                  "outPrice": {
                    "type": "number",
                    "format": "float",
                    "description": "Selling price"
                  },
                  "quantity": {
                    "type": "integer",
                    "description": "Available quantity"
                  },
                  "title": {
                    "type": "string",
                    "description": "Product title"
                  },
                  "description": {
                    "type": "string",
                    "description": "Product description"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Create a new product",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Product object that needs to be added",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "produceCategoriesID": {
                  "type": "integer",
                  "description": "Product category ID"
                },
                "unit": {
                  "type": "string",
                  "description": "Unit of measurement"
                },
                "image": {
                  "type": "string",
                  "description": "Product image URL"
                },
                "name": {
                  "type": "string",
                  "description": "Product name"
                },
                "weight": {
                  "type": "number",
                  "format": "float",
                  "description": "Product weight"
                },
                "length": {
                  "type": "number",
                  "format": "float",
                  "description": "Product length"
                },
                "width": {
                  "type": "number",
                  "format": "float",
                  "description": "Product width"
                },
                "height": {
                  "type": "number",
                  "format": "float",
                  "description": "Product height"
                },
                "supplierID": {
                  "type": "integer",
                  "description": "Supplier ID"
                },
                "origin": {
                  "type": "string",
                  "description": "Product origin"
                },
                "inPrice": {
                  "type": "number",
                  "format": "float",
                  "description": "Purchase price"
                },
                "outPrice": {
                  "type": "number",
                  "format": "float",
                  "description": "Selling price"
                },
                "quantity": {
                  "type": "integer",
                  "description": "Available quantity"
                },
                "title": {
                  "type": "string",
                  "description": "Product title"
                },
                "description": {
                  "type": "string",
                  "description": "Product description"
                }
              },
              "required": [
                "produceCategoriesID",
                "unit",
                "name",
                "weight",
                "length",
                "width",
                "height",
                "supplierID",
                "origin",
                "inPrice",
                "outPrice",
                "quantity",
                "title"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Product created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "ID": {
                  "type": "integer"
                },
                "produceCategoriesID": {
                  "type": "integer"
                },
                "unit": {
                  "type": "string"
                },
                "image": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "weight": {
                  "type": "number"
                },
                "length": {
                  "type": "number"
                },
                "width": {
                  "type": "number"
                },
                "height": {
                  "type": "number"
                },
                "supplierID": {
                  "type": "integer"
                },
                "origin": {
                  "type": "string"
                },
                "inPrice": {
                  "type": "number"
                },
                "outPrice": {
                  "type": "number"
                },
                "quantity": {
                  "type": "integer"
                },
                "title": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get product by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of product to fetch"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ID": {
                  "type": "integer",
                  "description": "Product ID"
                },
                "produceCategoriesID": {
                  "type": "integer",
                  "description": "Product category ID"
                },
                "unit": {
                  "type": "string",
                  "description": "Unit of measurement"
                },
                "image": {
                  "type": "string",
                  "description": "Product image URL"
                },
                "name": {
                  "type": "string",
                  "description": "Product name"
                },
                "weight": {
                  "type": "number",
                  "format": "float",
                  "description": "Product weight"
                },
                "length": {
                  "type": "number",
                  "format": "float",
                  "description": "Product length"
                },
                "width": {
                  "type": "number",
                  "format": "float",
                  "description": "Product width"
                },
                "height": {
                  "type": "number",
                  "format": "float",
                  "description": "Product height"
                },
                "supplierID": {
                  "type": "integer",
                  "description": "Supplier ID"
                },
                "origin": {
                  "type": "string",
                  "description": "Product origin"
                },
                "inPrice": {
                  "type": "number",
                  "format": "float",
                  "description": "Purchase price"
                },
                "outPrice": {
                  "type": "number",
                  "format": "float",
                  "description": "Selling price"
                },
                "quantity": {
                  "type": "integer",
                  "description": "Available quantity"
                },
                "title": {
                  "type": "string",
                  "description": "Product title"
                },
                "description": {
                  "type": "string",
                  "description": "Product description"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          },
          "404": {
            "description": "Product not found"
          }
        }
      },
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Update product by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of product to update"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Product object that needs to be updated",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "produceCategoriesID": {
                  "type": "integer",
                  "description": "Product category ID"
                },
                "unit": {
                  "type": "string",
                  "description": "Unit of measurement"
                },
                "image": {
                  "type": "string",
                  "description": "Product image URL"
                },
                "name": {
                  "type": "string",
                  "description": "Product name"
                },
                "weight": {
                  "type": "number",
                  "format": "float",
                  "description": "Product weight"
                },
                "length": {
                  "type": "number",
                  "format": "float",
                  "description": "Product length"
                },
                "width": {
                  "type": "number",
                  "format": "float",
                  "description": "Product width"
                },
                "height": {
                  "type": "number",
                  "format": "float",
                  "description": "Product height"
                },
                "supplierID": {
                  "type": "integer",
                  "description": "Supplier ID"
                },
                "origin": {
                  "type": "string",
                  "description": "Product origin"
                },
                "inPrice": {
                  "type": "number",
                  "format": "float",
                  "description": "Purchase price"
                },
                "outPrice": {
                  "type": "number",
                  "format": "float",
                  "description": "Selling price"
                },
                "quantity": {
                  "type": "integer",
                  "description": "Available quantity"
                },
                "title": {
                  "type": "string",
                  "description": "Product title"
                },
                "description": {
                  "type": "string",
                  "description": "Product description"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "ID": {
                  "type": "integer"
                },
                "produceCategoriesID": {
                  "type": "integer"
                },
                "unit": {
                  "type": "string"
                },
                "image": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "weight": {
                  "type": "number"
                },
                "length": {
                  "type": "number"
                },
                "width": {
                  "type": "number"
                },
                "height": {
                  "type": "number"
                },
                "supplierID": {
                  "type": "integer"
                },
                "origin": {
                  "type": "string"
                },
                "inPrice": {
                  "type": "number"
                },
                "outPrice": {
                  "type": "number"
                },
                "quantity": {
                  "type": "integer"
                },
                "title": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          },
          "404": {
            "description": "Product not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete product by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of product to delete"
          }
        ],
        "responses": {
          "204": {
            "description": "Product deleted successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          },
          "404": {
            "description": "Product not found"
          }
        }
      }
    },
    "/post-offices": {
      "get": {
        "tags": [
          "Post Offices"
        ],
        "summary": "Returns the list of all post offices",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer",
                    "description": "Post office ID"
                  },
                  "address": {
                    "type": "string",
                    "description": "Post office address"
                  },
                  "name": {
                    "type": "string",
                    "description": "Post office name"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "description": "Phone number"
                  },
                  "email": {
                    "type": "string",
                    "description": "Email address"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          }
        }
      },
      "post": {
        "tags": [
          "Post Offices"
        ],
        "summary": "Create a new post office",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Post office object that needs to be added",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "address": {
                  "type": "string",
                  "description": "Post office address"
                },
                "name": {
                  "type": "string",
                  "description": "Post office name"
                },
                "phoneNumber": {
                  "type": "string",
                  "description": "Phone number"
                },
                "email": {
                  "type": "string",
                  "description": "Email address"
                }
              },
              "required": [
                "address",
                "name",
                "phoneNumber",
                "email"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Post office created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "ID": {
                  "type": "integer"
                },
                "address": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "phoneNumber": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          }
        }
      }
    },
    "/invoice": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Returns the list of all invoices",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer",
                    "description": "Invoice ID"
                  },
                  "customerID": {
                    "type": "integer",
                    "description": "Customer ID"
                  },
                  "employeeID": {
                    "type": "integer",
                    "description": "Employee who created the invoice"
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date of invoice"
                  },
                  "totalAmount": {
                    "type": "number",
                    "format": "float",
                    "description": "Total amount of the invoice"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          }
        }
      },
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Create a new invoice",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Invoice object to be created",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "customerID": {
                  "type": "integer"
                },
                "employeeID": {
                  "type": "integer"
                },
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "totalAmount": {
                  "type": "number",
                  "format": "float"
                }
              },
              "required": [
                "customerID",
                "employeeID",
                "date",
                "totalAmount"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Invoice created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "ID": {
                  "type": "integer"
                },
                "customerID": {
                  "type": "integer"
                },
                "employeeID": {
                  "type": "integer"
                },
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "totalAmount": {
                  "type": "number",
                  "format": "float"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          }
        }
      }
    },
    "/invoice/{id}": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Get invoice by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of invoice to fetch"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ID": {
                  "type": "integer"
                },
                "customerID": {
                  "type": "integer"
                },
                "employeeID": {
                  "type": "integer"
                },
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "totalAmount": {
                  "type": "number",
                  "format": "float"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          },
          "404": {
            "description": "Invoice not found"
          }
        }
      },
      "put": {
        "tags": [
          "Invoice"
        ],
        "summary": "Update invoice by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of invoice to update"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated invoice object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "customerID": {
                  "type": "integer"
                },
                "employeeID": {
                  "type": "integer"
                },
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "totalAmount": {
                  "type": "number",
                  "format": "float"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Invoice updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "ID": {
                  "type": "integer"
                },
                "customerID": {
                  "type": "integer"
                },
                "employeeID": {
                  "type": "integer"
                },
                "date": {
                  "type": "string",
                  "format": "date-time"
                },
                "totalAmount": {
                  "type": "number",
                  "format": "float"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          },
          "404": {
            "description": "Invoice not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Invoice"
        ],
        "summary": "Delete invoice by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of invoice to delete"
          }
        ],
        "responses": {
          "204": {
            "description": "Invoice deleted successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          },
          "404": {
            "description": "Invoice not found"
          }
        }
      }
    },
    "/shipments": {
      "get": {
        "tags": [
          "Shipments"
        ],
        "summary": "Returns the list of all shipments",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer",
                    "description": "Shipment ID"
                  },
                  "invoiceID": {
                    "type": "integer",
                    "description": "Associated invoice ID"
                  },
                  "postOfficeID": {
                    "type": "integer",
                    "description": "Post office ID"
                  },
                  "receiverName": {
                    "type": "string",
                    "description": "Name of receiver"
                  },
                  "receiverPhone": {
                    "type": "string",
                    "description": "Phone number of receiver"
                  },
                  "sendTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time when shipment was sent"
                  },
                  "receiveTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time when shipment was received"
                  },
                  "size": {
                    "type": "string",
                    "description": "Size of the shipment"
                  },
                  "shippingCost": {
                    "type": "number",
                    "format": "float",
                    "description": "Cost of shipping"
                  },
                  "payer": {
                    "type": "string",
                    "description": "Who pays for the shipping"
                  },
                  "address": {
                    "type": "string",
                    "description": "Delivery address"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          }
        }
      },
      "post": {
        "tags": [
          "Shipments"
        ],
        "summary": "Create a new shipment",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Shipment object that needs to be added",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "invoiceID": {
                  "type": "integer",
                  "description": "Associated invoice ID"
                },
                "postOfficeID": {
                  "type": "integer",
                  "description": "Post office ID"
                },
                "receiverName": {
                  "type": "string",
                  "description": "Name of receiver"
                },
                "receiverPhone": {
                  "type": "string",
                  "description": "Phone number of receiver"
                },
                "sendTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time when shipment was sent"
                },
                "receiveTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time when shipment was received"
                },
                "size": {
                  "type": "string",
                  "description": "Size of the shipment"
                },
                "shippingCost": {
                  "type": "number",
                  "format": "float",
                  "description": "Cost of shipping"
                },
                "payer": {
                  "type": "string",
                  "description": "Who pays for the shipping"
                },
                "address": {
                  "type": "string",
                  "description": "Delivery address"
                }
              },
              "required": [
                "invoiceID",
                "postOfficeID",
                "receiverName",
                "receiverPhone",
                "sendTime",
                "size",
                "shippingCost",
                "payer",
                "address"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Shipment created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "ID": {
                  "type": "integer"
                },
                "invoiceID": {
                  "type": "integer"
                },
                "postOfficeID": {
                  "type": "integer"
                },
                "receiverName": {
                  "type": "string"
                },
                "receiverPhone": {
                  "type": "string"
                },
                "sendTime": {
                  "type": "string",
                  "format": "date-time"
                },
                "receiveTime": {
                  "type": "string",
                  "format": "date-time"
                },
                "size": {
                  "type": "string"
                },
                "shippingCost": {
                  "type": "number",
                  "format": "float"
                },
                "payer": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          }
        }
      }
    },
    "/shipments/{id}": {
      "get": {
        "tags": [
          "Shipments"
        ],
        "summary": "Get shipment by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of shipment to fetch"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ID": {
                  "type": "integer",
                  "description": "Shipment ID"
                },
                "invoiceID": {
                  "type": "integer",
                  "description": "Associated invoice ID"
                },
                "postOfficeID": {
                  "type": "integer",
                  "description": "Post office ID"
                },
                "receiverName": {
                  "type": "string",
                  "description": "Name of receiver"
                },
                "receiverPhone": {
                  "type": "string",
                  "description": "Phone number of receiver"
                },
                "sendTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time when shipment was sent"
                },
                "receiveTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time when shipment was received"
                },
                "size": {
                  "type": "string",
                  "description": "Size of the shipment"
                },
                "shippingCost": {
                  "type": "number",
                  "format": "float",
                  "description": "Cost of shipping"
                },
                "payer": {
                  "type": "string",
                  "description": "Who pays for the shipping"
                },
                "address": {
                  "type": "string",
                  "description": "Delivery address"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          },
          "404": {
            "description": "Shipment not found"
          }
        }
      },
      "put": {
        "tags": [
          "Shipments"
        ],
        "summary": "Update shipment by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of shipment to update"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Shipment object that needs to be updated",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "invoiceID": {
                  "type": "integer",
                  "description": "Associated invoice ID"
                },
                "postOfficeID": {
                  "type": "integer",
                  "description": "Post office ID"
                },
                "receiverName": {
                  "type": "string",
                  "description": "Name of receiver"
                },
                "receiverPhone": {
                  "type": "string",
                  "description": "Phone number of receiver"
                },
                "sendTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time when shipment was sent"
                },
                "receiveTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time when shipment was received"
                },
                "size": {
                  "type": "string",
                  "description": "Size of the shipment"
                },
                "shippingCost": {
                  "type": "number",
                  "format": "float",
                  "description": "Cost of shipping"
                },
                "payer": {
                  "type": "string",
                  "description": "Who pays for the shipping"
                },
                "address": {
                  "type": "string",
                  "description": "Delivery address"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Shipment updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "ID": {
                  "type": "integer"
                },
                "invoiceID": {
                  "type": "integer"
                },
                "postOfficeID": {
                  "type": "integer"
                },
                "receiverName": {
                  "type": "string"
                },
                "receiverPhone": {
                  "type": "string"
                },
                "sendTime": {
                  "type": "string",
                  "format": "date-time"
                },
                "receiveTime": {
                  "type": "string",
                  "format": "date-time"
                },
                "size": {
                  "type": "string"
                },
                "shippingCost": {
                  "type": "number",
                  "format": "float"
                },
                "payer": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          },
          "404": {
            "description": "Shipment not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Shipments"
        ],
        "summary": "Delete shipment by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of shipment to delete"
          }
        ],
        "responses": {
          "204": {
            "description": "Shipment deleted successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          },
          "404": {
            "description": "Shipment not found"
          }
        }
      }
    },
    "/invoice-detail": {
      "get": {
        "tags": [
          "InvoiceDetail"
        ],
        "summary": "Returns the list of all invoice details",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer",
                    "description": "Invoice detail ID"
                  },
                  "invoiceID": {
                    "type": "integer",
                    "description": "ID of the invoice"
                  },
                  "itemID": {
                    "type": "integer",
                    "description": "ID of the item"
                  },
                  "quantity": {
                    "type": "integer",
                    "description": "Quantity of item"
                  },
                  "unitPrice": {
                    "type": "number",
                    "format": "float",
                    "description": "Unit price of item"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          }
        }
      },
      "post": {
        "tags": [
          "InvoiceDetail"
        ],
        "summary": "Create a new invoice detail",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Invoice detail object that needs to be added",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "invoiceID": {
                  "type": "integer"
                },
                "itemID": {
                  "type": "integer"
                },
                "quantity": {
                  "type": "integer"
                },
                "unitPrice": {
                  "type": "number",
                  "format": "float"
                }
              },
              "required": [
                "invoiceID",
                "itemID",
                "quantity",
                "unitPrice"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Invoice detail created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "ID": {
                  "type": "integer"
                },
                "invoiceID": {
                  "type": "integer"
                },
                "itemID": {
                  "type": "integer"
                },
                "quantity": {
                  "type": "integer"
                },
                "unitPrice": {
                  "type": "number",
                  "format": "float"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          }
        }
      }
    },
    "/invoice-detail/{id}": {
      "get": {
        "tags": [
          "InvoiceDetail"
        ],
        "summary": "Get invoice detail by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of invoice detail to fetch"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ID": {
                  "type": "integer"
                },
                "invoiceID": {
                  "type": "integer"
                },
                "itemID": {
                  "type": "integer"
                },
                "quantity": {
                  "type": "integer"
                },
                "unitPrice": {
                  "type": "number",
                  "format": "float"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          },
          "404": {
            "description": "Invoice detail not found"
          }
        }
      },
      "put": {
        "tags": [
          "InvoiceDetail"
        ],
        "summary": "Update invoice detail by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of invoice detail to update"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated invoice detail object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "invoiceID": {
                  "type": "integer"
                },
                "itemID": {
                  "type": "integer"
                },
                "quantity": {
                  "type": "integer"
                },
                "unitPrice": {
                  "type": "number",
                  "format": "float"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Invoice detail updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "ID": {
                  "type": "integer"
                },
                "invoiceID": {
                  "type": "integer"
                },
                "itemID": {
                  "type": "integer"
                },
                "quantity": {
                  "type": "integer"
                },
                "unitPrice": {
                  "type": "number",
                  "format": "float"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          },
          "404": {
            "description": "Invoice detail not found"
          }
        }
      },
      "delete": {
        "tags": [
          "InvoiceDetail"
        ],
        "summary": "Delete invoice detail by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of invoice detail to delete"
          }
        ],
        "responses": {
          "204": {
            "description": "Invoice detail deleted successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          },
          "404": {
            "description": "Invoice detail not found"
          }
        }
      }
    },
    "/suppliers": {
      "get": {
        "tags": [
          "Suppliers"
        ],
        "summary": "Returns the list of all suppliers",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer",
                    "description": "Supplier ID"
                  },
                  "address": {
                    "type": "string",
                    "description": "Supplier address"
                  },
                  "name": {
                    "type": "string",
                    "description": "Supplier name"
                  },
                  "postalCode": {
                    "type": "string",
                    "description": "Postal code"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "description": "Phone number"
                  },
                  "email": {
                    "type": "string",
                    "description": "Email address"
                  },
                  "representative": {
                    "type": "string",
                    "description": "Representative name"
                  },
                  "phoneNumberRep": {
                    "type": "string",
                    "description": "Representative phone number"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          }
        }
      },
      "post": {
        "tags": [
          "Suppliers"
        ],
        "summary": "Create a new supplier",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Supplier object that needs to be added",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "address": {
                  "type": "string",
                  "description": "Supplier address"
                },
                "name": {
                  "type": "string",
                  "description": "Supplier name"
                },
                "postalCode": {
                  "type": "string",
                  "description": "Postal code"
                },
                "phoneNumber": {
                  "type": "string",
                  "description": "Phone number"
                },
                "email": {
                  "type": "string",
                  "description": "Email address"
                },
                "representative": {
                  "type": "string",
                  "description": "Representative name"
                },
                "phoneNumberRep": {
                  "type": "string",
                  "description": "Representative phone number"
                }
              },
              "required": [
                "address",
                "name",
                "postalCode",
                "phoneNumber",
                "email"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Supplier created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "ID": {
                  "type": "integer"
                },
                "address": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "postalCode": {
                  "type": "string"
                },
                "phoneNumber": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "representative": {
                  "type": "string"
                },
                "phoneNumberRep": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          }
        }
      }
    },
    "/suppliers/{id}": {
      "get": {
        "tags": [
          "Suppliers"
        ],
        "summary": "Get supplier by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of supplier to fetch"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ID": {
                  "type": "integer",
                  "description": "Supplier ID"
                },
                "address": {
                  "type": "string",
                  "description": "Supplier address"
                },
                "name": {
                  "type": "string",
                  "description": "Supplier name"
                },
                "postalCode": {
                  "type": "string",
                  "description": "Postal code"
                },
                "phoneNumber": {
                  "type": "string",
                  "description": "Phone number"
                },
                "email": {
                  "type": "string",
                  "description": "Email address"
                },
                "representative": {
                  "type": "string",
                  "description": "Representative name"
                },
                "phoneNumberRep": {
                  "type": "string",
                  "description": "Representative phone number"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          },
          "404": {
            "description": "Supplier not found"
          }
        }
      },
      "put": {
        "tags": [
          "Suppliers"
        ],
        "summary": "Update supplier by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of supplier to update"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Supplier object that needs to be updated",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "address": {
                  "type": "string",
                  "description": "Supplier address"
                },
                "name": {
                  "type": "string",
                  "description": "Supplier name"
                },
                "postalCode": {
                  "type": "string",
                  "description": "Postal code"
                },
                "phoneNumber": {
                  "type": "string",
                  "description": "Phone number"
                },
                "email": {
                  "type": "string",
                  "description": "Email address"
                },
                "representative": {
                  "type": "string",
                  "description": "Representative name"
                },
                "phoneNumberRep": {
                  "type": "string",
                  "description": "Representative phone number"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Supplier updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "ID": {
                  "type": "integer"
                },
                "address": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "postalCode": {
                  "type": "string"
                },
                "phoneNumber": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "representative": {
                  "type": "string"
                },
                "phoneNumberRep": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          },
          "404": {
            "description": "Supplier not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Suppliers"
        ],
        "summary": "Delete supplier by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of supplier to delete"
          }
        ],
        "responses": {
          "204": {
            "description": "Supplier deleted successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          },
          "404": {
            "description": "Supplier not found"
          }
        }
      }
    },
    "/stockins": {
      "get": {
        "tags": [
          "Stockins"
        ],
        "summary": "Returns the list of all stockins",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer",
                    "description": "Stockin ID"
                  },
                  "stockinDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date of stock in"
                  },
                  "notes": {
                    "type": "string",
                    "description": "Additional notes"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          }
        }
      },
      "post": {
        "tags": [
          "Stockins"
        ],
        "summary": "Create a new stockin",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Stockin object that needs to be added",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "stockinDate": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Date of stock in"
                },
                "notes": {
                  "type": "string",
                  "description": "Additional notes"
                }
              },
              "required": [
                "stockinDate"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Stockin created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "ID": {
                  "type": "integer"
                },
                "stockinDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "notes": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          }
        }
      }
    },
    "/stockins/{id}": {
      "get": {
        "tags": [
          "Stockins"
        ],
        "summary": "Get stockin by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of stockin to fetch"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ID": {
                  "type": "integer",
                  "description": "Stockin ID"
                },
                "stockinDate": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Date of stock in"
                },
                "notes": {
                  "type": "string",
                  "description": "Additional notes"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          },
          "404": {
            "description": "Stockin not found"
          }
        }
      },
      "put": {
        "tags": [
          "Stockins"
        ],
        "summary": "Update stockin by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of stockin to update"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Stockin object that needs to be updated",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "stockinDate": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Date of stock in"
                },
                "notes": {
                  "type": "string",
                  "description": "Additional notes"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Stockin updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "ID": {
                  "type": "integer"
                },
                "stockinDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "notes": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          },
          "404": {
            "description": "Stockin not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Stockins"
        ],
        "summary": "Delete stockin by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of stockin to delete"
          }
        ],
        "responses": {
          "204": {
            "description": "Stockin deleted successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          },
          "404": {
            "description": "Stockin not found"
          }
        }
      }
    },
    "/detail-stockins": {
      "get": {
        "tags": [
          "Detail Stockins"
        ],
        "summary": "Returns the list of all detail stockins",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer",
                    "description": "Detail stockin ID"
                  },
                  "StockinID": {
                    "type": "integer",
                    "description": "Associated stockin ID"
                  },
                  "productID": {
                    "type": "integer",
                    "description": "Product ID"
                  },
                  "quantity": {
                    "type": "integer",
                    "description": "Quantity of products"
                  },
                  "unitPrice": {
                    "type": "number",
                    "format": "float",
                    "description": "Price per unit"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          }
        }
      },
      "post": {
        "tags": [
          "Detail Stockins"
        ],
        "summary": "Create a new detail stockin",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Detail stockin object that needs to be added",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "StockinID": {
                  "type": "integer",
                  "description": "Associated stockin ID"
                },
                "productID": {
                  "type": "integer",
                  "description": "Product ID"
                },
                "quantity": {
                  "type": "integer",
                  "description": "Quantity of products"
                },
                "unitPrice": {
                  "type": "number",
                  "format": "float",
                  "description": "Price per unit"
                }
              },
              "required": [
                "StockinID",
                "productID",
                "quantity",
                "unitPrice"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Detail stockin created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "ID": {
                  "type": "integer"
                },
                "StockinID": {
                  "type": "integer"
                },
                "productID": {
                  "type": "integer"
                },
                "quantity": {
                  "type": "integer"
                },
                "unitPrice": {
                  "type": "number",
                  "format": "float"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          }
        }
      }
    },
    "/detail-stockins/{id}": {
      "get": {
        "tags": [
          "Detail Stockins"
        ],
        "summary": "Get detail stockin by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of detail stockin to fetch"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ID": {
                  "type": "integer",
                  "description": "Detail stockin ID"
                },
                "StockinID": {
                  "type": "integer",
                  "description": "Associated stockin ID"
                },
                "productID": {
                  "type": "integer",
                  "description": "Product ID"
                },
                "quantity": {
                  "type": "integer",
                  "description": "Quantity of products"
                },
                "unitPrice": {
                  "type": "number",
                  "format": "float",
                  "description": "Price per unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          },
          "404": {
            "description": "Detail stockin not found"
          }
        }
      },
      "put": {
        "tags": [
          "Detail Stockins"
        ],
        "summary": "Update detail stockin by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of detail stockin to update"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Detail stockin object that needs to be updated",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "StockinID": {
                  "type": "integer",
                  "description": "Associated stockin ID"
                },
                "productID": {
                  "type": "integer",
                  "description": "Product ID"
                },
                "quantity": {
                  "type": "integer",
                  "description": "Quantity of products"
                },
                "unitPrice": {
                  "type": "number",
                  "format": "float",
                  "description": "Price per unit"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detail stockin updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "ID": {
                  "type": "integer"
                },
                "StockinID": {
                  "type": "integer"
                },
                "productID": {
                  "type": "integer"
                },
                "quantity": {
                  "type": "integer"
                },
                "unitPrice": {
                  "type": "number",
                  "format": "float"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          },
          "404": {
            "description": "Detail stockin not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Detail Stockins"
        ],
        "summary": "Delete detail stockin by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of detail stockin to delete"
          }
        ],
        "responses": {
          "204": {
            "description": "Detail stockin deleted successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          },
          "404": {
            "description": "Detail stockin not found"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Register a new user",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User object that needs to be registered",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email",
                  "description": "User email address"
                },
                "password": {
                  "type": "string",
                  "format": "password",
                  "description": "User password (min 6 characters)"
                },
                "name": {
                  "type": "string",
                  "description": "User full name"
                },
                "address": {
                  "type": "string",
                  "description": "User address"
                },
                "phoneNumber": {
                  "type": "string",
                  "description": "User phone number"
                },
                "department": {
                  "type": "string",
                  "description": "User department"
                },
                "IdentityCard": {
                  "type": "string",
                  "description": "User identity card number"
                },
                "userType": {
                  "type": "string",
                  "description": "Type of user"
                },
                "birthday": {
                  "type": "string",
                  "format": "date",
                  "description": "User birthday"
                }
              },
              "required": [
                "email",
                "password",
                "name",
                "address",
                "phoneNumber",
                "department",
                "IdentityCard",
                "userType",
                "birthday"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User registered successfully",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "email": {
                      "type": "string"
                    }
                  }
                },
                "token": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "409": {
            "description": "User with this email already exists"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login a user",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User credentials",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email",
                  "description": "User email address"
                },
                "password": {
                  "type": "string",
                  "format": "password",
                  "description": "User password"
                }
              },
              "required": [
                "email",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User logged in successfully",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "email": {
                      "type": "string"
                    }
                  }
                },
                "token": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Invalid email or password"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/forgot-password": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Forgot password",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User email to receive reset link",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email"
                }
              },
              "required": [
                "email"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reset link sent successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Password reset email sent"
                }
              }
            }
          },
          "400": {
            "description": "Invalid email format or missing email"
          },
          "404": {
            "description": "Email not found"
          }
        }
      }
    },
    "/auth/reset-password": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Reset password",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Reset password data including token and new password",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "description": "Password reset token"
                },
                "newPassword": {
                  "type": "string",
                  "description": "New password"
                }
              },
              "required": [
                "token",
                "newPassword"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password reset successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Password has been reset"
                }
              }
            }
          },
          "400": {
            "description": "Invalid token or missing data"
          },
          "401": {
            "description": "Token expired or invalid"
          }
        }
      }
    },
    "/auth/verify-email": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Verify email",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Token used to verify email",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "description": "Verification token sent to email"
                }
              },
              "required": [
                "token"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email verified successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Email has been verified"
                }
              }
            }
          },
          "400": {
            "description": "Invalid or expired token"
          },
          "409": {
            "description": "Email already verified"
          }
        }
      }
    },
    "/auth/change-password": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Change password",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Current and new password",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "currentPassword": {
                  "type": "string",
                  "description": "User's current password"
                },
                "newPassword": {
                  "type": "string",
                  "description": "User's new password"
                }
              },
              "required": [
                "currentPassword",
                "newPassword"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password changed successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Password updated"
                }
              }
            }
          },
          "400": {
            "description": "Current password is incorrect or new password is invalid"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Change password",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Logout successful",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Successfully logged out"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns the list of all users",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer",
                    "description": "User ID"
                  },
                  "address": {
                    "type": "string",
                    "description": "User address"
                  },
                  "image": {
                    "type": "string",
                    "description": "User profile image URL"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User email"
                  },
                  "birthday": {
                    "type": "string",
                    "format": "date",
                    "description": "User birthday"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "description": "User phone number"
                  },
                  "department": {
                    "type": "string",
                    "description": "User department"
                  },
                  "IdentityCard": {
                    "type": "string",
                    "description": "User identity card"
                  },
                  "userType": {
                    "type": "string",
                    "description": "Type of user"
                  },
                  "createAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "User creation date"
                  },
                  "status": {
                    "type": "string",
                    "description": "User status"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a new user",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User object that needs to be created",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "address": {
                  "type": "string",
                  "description": "User address"
                },
                "image": {
                  "type": "string",
                  "description": "User profile image URL"
                },
                "email": {
                  "type": "string",
                  "format": "email",
                  "description": "User email"
                },
                "password": {
                  "type": "string",
                  "format": "password",
                  "description": "User password (min 6 characters)"
                },
                "birthday": {
                  "type": "string",
                  "format": "date",
                  "description": "User birthday"
                },
                "phoneNumber": {
                  "type": "string",
                  "description": "User phone number"
                },
                "department": {
                  "type": "string",
                  "description": "User department"
                },
                "IdentityCard": {
                  "type": "string",
                  "description": "User identity card"
                },
                "userType": {
                  "type": "string",
                  "description": "Type of user"
                },
                "status": {
                  "type": "string",
                  "description": "User status",
                  "default": "ACTIVE"
                }
              },
              "required": [
                "email",
                "password",
                "address",
                "phoneNumber",
                "department",
                "IdentityCard",
                "userType",
                "birthday"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "ID": {
                  "type": "integer"
                },
                "email": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                },
                "image": {
                  "type": "string"
                },
                "birthday": {
                  "type": "string",
                  "format": "date"
                },
                "phoneNumber": {
                  "type": "string"
                },
                "department": {
                  "type": "string"
                },
                "IdentityCard": {
                  "type": "string"
                },
                "userType": {
                  "type": "string"
                },
                "createAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "status": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of user to fetch"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ID": {
                  "type": "integer",
                  "description": "User ID"
                },
                "address": {
                  "type": "string",
                  "description": "User address"
                },
                "image": {
                  "type": "string",
                  "description": "User profile image URL"
                },
                "email": {
                  "type": "string",
                  "format": "email",
                  "description": "User email"
                },
                "birthday": {
                  "type": "string",
                  "format": "date",
                  "description": "User birthday"
                },
                "phoneNumber": {
                  "type": "string",
                  "description": "User phone number"
                },
                "department": {
                  "type": "string",
                  "description": "User department"
                },
                "IdentityCard": {
                  "type": "string",
                  "description": "User identity card"
                },
                "userType": {
                  "type": "string",
                  "description": "Type of user"
                },
                "createAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "User creation date"
                },
                "status": {
                  "type": "string",
                  "description": "User status"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update user by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of user to update"
          },
          {
            "in": "body",
            "name": "body",
            "description": "User object that needs to be updated",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "address": {
                  "type": "string",
                  "description": "User address"
                },
                "image": {
                  "type": "string",
                  "description": "User profile image URL"
                },
                "email": {
                  "type": "string",
                  "format": "email",
                  "description": "User email"
                },
                "password": {
                  "type": "string",
                  "format": "password",
                  "description": "User password (min 6 characters)"
                },
                "birthday": {
                  "type": "string",
                  "format": "date",
                  "description": "User birthday"
                },
                "phoneNumber": {
                  "type": "string",
                  "description": "User phone number"
                },
                "department": {
                  "type": "string",
                  "description": "User department"
                },
                "IdentityCard": {
                  "type": "string",
                  "description": "User identity card"
                },
                "userType": {
                  "type": "string",
                  "description": "Type of user"
                },
                "status": {
                  "type": "string",
                  "description": "User status"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "ID": {
                  "type": "integer"
                },
                "email": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                },
                "image": {
                  "type": "string"
                },
                "birthday": {
                  "type": "string",
                  "format": "date"
                },
                "phoneNumber": {
                  "type": "string"
                },
                "department": {
                  "type": "string"
                },
                "IdentityCard": {
                  "type": "string"
                },
                "userType": {
                  "type": "string"
                },
                "createAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "status": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete user by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of user to delete"
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/post-offices/{id}": {
      "get": {
        "tags": [
          "Post Offices"
        ],
        "summary": "Get post office by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of post office to fetch"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ID": {
                  "type": "integer",
                  "description": "Post office ID"
                },
                "address": {
                  "type": "string",
                  "description": "Post office address"
                },
                "name": {
                  "type": "string",
                  "description": "Post office name"
                },
                "phoneNumber": {
                  "type": "string",
                  "description": "Phone number"
                },
                "email": {
                  "type": "string",
                  "description": "Email address"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          },
          "404": {
            "description": "Post office not found"
          }
        }
      },
      "put": {
        "tags": [
          "Post Offices"
        ],
        "summary": "Update post office by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of post office to update"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Post office object that needs to be updated",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "address": {
                  "type": "string",
                  "description": "Post office address"
                },
                "name": {
                  "type": "string",
                  "description": "Post office name"
                },
                "phoneNumber": {
                  "type": "string",
                  "description": "Phone number"
                },
                "email": {
                  "type": "string",
                  "description": "Email address"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Post office updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "ID": {
                  "type": "integer"
                },
                "address": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "phoneNumber": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          },
          "404": {
            "description": "Post office not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Post Offices"
        ],
        "summary": "Delete post office by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of post office to delete"
          }
        ],
        "responses": {
          "204": {
            "description": "Post office deleted successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          },
          "404": {
            "description": "Post office not found"
          }
        }
      }
    },
    "/promotion": {
      "get": {
        "tags": [
          "Promotion"
        ],
        "summary": "Returns the list of all promotions",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer"
                  },
                  "code": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "discountPercent": {
                    "type": "number",
                    "format": "float"
                  },
                  "startDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "endDate": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          }
        }
      },
      "post": {
        "tags": [
          "Promotion"
        ],
        "summary": "Create a new promotion",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "discountPercent": {
                  "type": "number",
                  "format": "float"
                },
                "startDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "endDate": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "required": [
                "code",
                "discountPercent",
                "startDate",
                "endDate"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Promotion created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "ID": {
                  "type": "integer"
                },
                "code": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "discountPercent": {
                  "type": "number",
                  "format": "float"
                },
                "startDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "endDate": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          }
        }
      }
    },
    "/promotion/{id}": {
      "get": {
        "tags": [
          "Promotion"
        ],
        "summary": "Get promotion by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ID": {
                  "type": "integer"
                },
                "code": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "discountPercent": {
                  "type": "number",
                  "format": "float"
                },
                "startDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "endDate": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          },
          "404": {
            "description": "Promotion not found"
          }
        }
      },
      "put": {
        "tags": [
          "Promotion"
        ],
        "summary": "Update promotion by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "discountPercent": {
                  "type": "number",
                  "format": "float"
                },
                "startDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "endDate": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Promotion updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "ID": {
                  "type": "integer"
                },
                "code": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "discountPercent": {
                  "type": "number",
                  "format": "float"
                },
                "startDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "endDate": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          },
          "404": {
            "description": "Promotion not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Promotion"
        ],
        "summary": "Delete promotion by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "Promotion deleted successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          },
          "404": {
            "description": "Promotion not found"
          }
        }
      }
    },
    "/customer": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Returns the list of all customers",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Create a new customer",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "phone": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "email"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Customer created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "ID": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "phone": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          }
        }
      }
    },
    "/customer/{id}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Get customer by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "ID": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "phone": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          },
          "404": {
            "description": "Customer not found"
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Update customer by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "phone": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customer updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "ID": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "phone": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          },
          "404": {
            "description": "Customer not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "Delete customer by ID",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "204": {
            "description": "Customer deleted successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized - No token provided"
          },
          "403": {
            "description": "Forbidden - Invalid token"
          },
          "404": {
            "description": "Customer not found"
          }
        }
      }
    }
  }
}
